{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milad\\\\desktop\\\\msa\\\\my-app\\\\src\\\\components\\\\MyWebcam.js\";\nimport React from 'react';\nimport Webcam from 'react-webcam';\nimport Button from 'react-bootstrap/Button';\n\nclass MyWebcam extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setRef = webcam => {\n      this.webcam = webcam;\n    };\n\n    this.startCapturing = () => {\n      this.isCapturing = true;\n      this.timerId = setInterval(() => {\n        const image = this.webcam.getScreenshot();\n        const byteArrayImage = this.convertToByteArray(image);\n        this.fetchData(byteArrayImage);\n      }, 100);\n    };\n\n    this.convertToByteArray = image => {\n      const base64 = require('base64-js');\n\n      const base64string = image.split(',')[1];\n      return base64.toByteArray(base64string);\n    };\n\n    this.fetchData = byteArray => {\n      const apiKey = 'b161e16f6de541719ab272bb4f1eccf8';\n      const apiEndpoint = 'https://australiaeast.api.cognitive.microsoft.com/face/v1.0/detect?returnFaceAttributes=emotion';\n      fetch(apiEndpoint, {\n        body: byteArray,\n        headers: {\n          'cache-control': 'no-cache',\n          'Ocp-Apim-Subscription-Key': apiKey,\n          'Content-Type': 'application/octet-stream'\n        },\n        method: 'POST'\n      }).then(response => {\n        if (response.ok) {\n          response.json().then(data => {\n            var happiness = data[0] != null ? data[0].faceAttributes.emotion.happiness : 0;\n            happiness = Math.round(happiness * 100);\n\n            if (this.isCapturing && happiness < 100) {\n              this.props.onReceivedResult(happiness);\n            } else {\n              clearInterval(this.timerId);\n              this.isCapturing = false;\n              this.props.onReceivedResult(100);\n            }\n          });\n        }\n      });\n    };\n\n    this.timerId = null;\n    this.isCapturing = false;\n  }\n\n  render() {\n    const videoConstraints = {\n      width: 750,\n      height: 500,\n      facingMode: \"user\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Webcam, {\n      audio: false,\n      height: 500,\n      width: 750,\n      ref: this.setRef,\n      screenshotFormat: \"image/jpeg\",\n      videoConstraints: videoConstraints,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.startCapturing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Start Game!\"));\n  }\n\n}\n\nexport default MyWebcam;","map":{"version":3,"sources":["C:\\Users\\milad\\desktop\\msa\\my-app\\src\\components\\MyWebcam.js"],"names":["React","Webcam","Button","MyWebcam","Component","constructor","props","setRef","webcam","startCapturing","isCapturing","timerId","setInterval","image","getScreenshot","byteArrayImage","convertToByteArray","fetchData","base64","require","base64string","split","toByteArray","byteArray","apiKey","apiEndpoint","fetch","body","headers","method","then","response","ok","json","data","happiness","faceAttributes","emotion","Math","round","onReceivedResult","clearInterval","render","videoConstraints","width","height","facingMode"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass MyWebcam extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.timerId = null;\r\n        this.isCapturing = false;\r\n    }\r\n\r\n    setRef = webcam => {\r\n        this.webcam = webcam;\r\n    };\r\n\r\n    startCapturing = () => {\r\n        this.isCapturing = true;\r\n        this.timerId = setInterval(() => {\r\n            const image = this.webcam.getScreenshot();\r\n            const byteArrayImage = this.convertToByteArray(image);\r\n            this.fetchData(byteArrayImage);\r\n        }, 100);\r\n    }\r\n\r\n    convertToByteArray = (image) => {\r\n        const base64 = require('base64-js');\r\n        const base64string = image.split(',')[1];\r\n        return base64.toByteArray(base64string)\r\n    };\r\n\r\n    fetchData = (byteArray) => {\r\n        const apiKey = 'b161e16f6de541719ab272bb4f1eccf8';\r\n        const apiEndpoint = 'https://australiaeast.api.cognitive.microsoft.com/face/v1.0/detect?returnFaceAttributes=emotion'\r\n        fetch(apiEndpoint, {\r\n            body: byteArray,\r\n            headers: {\r\n                'cache-control': 'no-cache', 'Ocp-Apim-Subscription-Key': apiKey, 'Content-Type': 'application/octet-stream'\r\n            },\r\n            method: 'POST'\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                response.json().then(data => {\r\n                    var happiness = (data[0] != null ? data[0].faceAttributes.emotion.happiness : 0);\r\n                    happiness = (Math.round(happiness * 100))\r\n                    if (this.isCapturing && happiness < 100) {\r\n                        this.props.onReceivedResult(happiness);\r\n                    } else {\r\n                        clearInterval(this.timerId);\r\n                        this.isCapturing = false;\r\n                        this.props.onReceivedResult(100);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const videoConstraints = {\r\n            width: 750,\r\n            height: 500,\r\n            facingMode: \"user\"\r\n        };\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Webcam\r\n                        audio={false}\r\n                        height={500}\r\n                        width={750}\r\n                        ref={this.setRef}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                        videoConstraints={videoConstraints}\r\n                    />\r\n                </div>\r\n                <Button variant=\"primary\" onClick={this.startCapturing}>Start Game!</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyWebcam;"]},"metadata":{},"sourceType":"module"}